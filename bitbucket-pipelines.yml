---
definitions:
  steps:
    - step: &test-code
        name: Test step
        image: golang:1.14
        script:
          - go get -v
          - go test -timeout 30s -cover ./...
        caches:
          - go
    - step: &lint-code
        name: Code lint step
        image: golang:1.14
        script:
          - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin "latest"
          - go get -v
          - golangci-lint run
        caches:
          - go
    - step: &build-app-linux-amd64
        name: Build Linux x64
        image: golang:1.14
        script:
          - CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -v -o bin/message-server-linux-amd64 -a -ldflags '-extldflags "-static"'  -ldflags "-X 'github.com/Eldius/message-server-go/config.buildDate=$(date +"%Y-%m-%dT%H:%M:%S%:z")' -X 'github.com/Eldius/message-server-go/config.version=$(git rev-parse --short HEAD)' -X 'github.com/Eldius/message-server-go/config.branchName=$(git branch --show-current)'" .
        caches:
          - go
        artifacts:
            - bin/*
    - step: &build-app-raspbian
        name: Build Linux Raspberry
        image: golang:1.14
        script:
          - CGO_ENABLED=0 GOOS=linux GOARCH=arm GOARM=5 go build -v -o bin/message-server-raspberry -a -ldflags '-extldflags "-static"'  -ldflags "-X 'github.com/Eldius/message-server-go/config.buildDate=$(date +"%Y-%m-%dT%H:%M:%S%:z")' -X 'github.com/Eldius/message-server-go/config.version=$(git rev-parse --short HEAD)' -X 'github.com/Eldius/message-server-go/config.branchName=$(git branch --show-current)'" .
        caches:
          - go
        artifacts:
            - bin/*
    - step: &upload-files
        script:
          - pipe: atlassian/bitbucket-upload-file:0.3.1
            variables:
              BITBUCKET_USERNAME: $BITBUCKET_USERNAME
              BITBUCKET_APP_PASSWORD: $BITBUCKET_APP_PASSWORD
              FILENAME: 'bin/*'

  caches:
    go: $GOPATH/pkg

pipelines:
  default:
    - step: *test-code
    - step: *lint-code
    - step: *build-app-linux-amd64
    - step: *build-app-raspbian
    - step: *upload-files
